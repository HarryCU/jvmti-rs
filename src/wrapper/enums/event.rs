use crate::sys;

#[derive(Debug, Clone, Copy)]
pub enum JvmtiEvent {
    VmInit,
    VmDeath,
    ThreadStart,
    ThreadEnd,
    ClassFileLoadHook,
    ClassLoad,
    ClassPrepare,
    VmStart,
    Exception,
    ExceptionCatch,
    SingleStep,
    FramePop,
    Breakpoint,
    FieldAccess,
    FieldModification,
    MethodEntry,
    MethodExit,
    NativeMethodBind,
    CompiledMethodLoad,
    CompiledMethodUnload,
    DynamicCodeGenerated,
    DataDumpRequest,
    MonitorWait,
    MonitorWaited,
    MonitorContendedEnter,
    MonitorContendedEntered,
    ResourceExhausted,
    GarbageCollectionStart,
    GarbageCollectionFinish,
    ObjectFree,
    VmObjectAlloc,
    Unsupported,
}

impl From<JvmtiEvent> for sys::jvmtiEvent {
    fn from(value: JvmtiEvent) -> Self {
        match value {
            JvmtiEvent::VmInit => sys::JVMTI_EVENT_VM_INIT,
            JvmtiEvent::VmDeath => sys::JVMTI_EVENT_VM_DEATH,
            JvmtiEvent::ThreadStart => sys::JVMTI_EVENT_THREAD_START,
            JvmtiEvent::ThreadEnd => sys::JVMTI_EVENT_THREAD_END,
            JvmtiEvent::ClassFileLoadHook => sys::JVMTI_EVENT_CLASS_FILE_LOAD_HOOK,
            JvmtiEvent::ClassLoad => sys::JVMTI_EVENT_CLASS_LOAD,
            JvmtiEvent::ClassPrepare => sys::JVMTI_EVENT_CLASS_PREPARE,
            JvmtiEvent::VmStart => sys::JVMTI_EVENT_VM_START,
            JvmtiEvent::Exception => sys::JVMTI_EVENT_EXCEPTION,
            JvmtiEvent::ExceptionCatch => sys::JVMTI_EVENT_EXCEPTION_CATCH,
            JvmtiEvent::SingleStep => sys::JVMTI_EVENT_SINGLE_STEP,
            JvmtiEvent::FramePop => sys::JVMTI_EVENT_FRAME_POP,
            JvmtiEvent::Breakpoint => sys::JVMTI_EVENT_BREAKPOINT,
            JvmtiEvent::FieldAccess => sys::JVMTI_EVENT_FIELD_ACCESS,
            JvmtiEvent::FieldModification => sys::JVMTI_EVENT_FIELD_MODIFICATION,
            JvmtiEvent::MethodEntry => sys::JVMTI_EVENT_METHOD_ENTRY,
            JvmtiEvent::MethodExit => sys::JVMTI_EVENT_METHOD_EXIT,
            JvmtiEvent::NativeMethodBind => sys::JVMTI_EVENT_NATIVE_METHOD_BIND,
            JvmtiEvent::CompiledMethodLoad => sys::JVMTI_EVENT_COMPILED_METHOD_LOAD,
            JvmtiEvent::CompiledMethodUnload => sys::JVMTI_EVENT_COMPILED_METHOD_UNLOAD,
            JvmtiEvent::DynamicCodeGenerated => sys::JVMTI_EVENT_DYNAMIC_CODE_GENERATED,
            JvmtiEvent::DataDumpRequest => sys::JVMTI_EVENT_DATA_DUMP_REQUEST,
            JvmtiEvent::MonitorWait => sys::JVMTI_EVENT_MONITOR_WAIT,
            JvmtiEvent::MonitorWaited => sys::JVMTI_EVENT_MONITOR_WAITED,
            JvmtiEvent::MonitorContendedEnter => sys::JVMTI_EVENT_MONITOR_CONTENDED_ENTER,
            JvmtiEvent::MonitorContendedEntered => sys::JVMTI_EVENT_MONITOR_CONTENDED_ENTERED,
            JvmtiEvent::ResourceExhausted => sys::JVMTI_EVENT_RESOURCE_EXHAUSTED,
            JvmtiEvent::GarbageCollectionStart => sys::JVMTI_EVENT_GARBAGE_COLLECTION_START,
            JvmtiEvent::GarbageCollectionFinish => sys::JVMTI_EVENT_GARBAGE_COLLECTION_FINISH,
            JvmtiEvent::ObjectFree => sys::JVMTI_EVENT_OBJECT_FREE,
            JvmtiEvent::VmObjectAlloc => sys::JVMTI_EVENT_VM_OBJECT_ALLOC,
            _ => sys::JVMTI_CONSTANT_UNSUPPORTED,
        }
    }
}

impl From<sys::jvmtiEvent> for JvmtiEvent {
    fn from(value: sys::jvmtiEvent) -> Self {
        match value {
            sys::JVMTI_EVENT_VM_INIT => JvmtiEvent::VmInit,
            sys::JVMTI_EVENT_VM_DEATH => JvmtiEvent::VmDeath,
            sys::JVMTI_EVENT_THREAD_START => JvmtiEvent::ThreadStart,
            sys::JVMTI_EVENT_THREAD_END => JvmtiEvent::ThreadEnd,
            sys::JVMTI_EVENT_CLASS_FILE_LOAD_HOOK => JvmtiEvent::ClassFileLoadHook,
            sys::JVMTI_EVENT_CLASS_LOAD => JvmtiEvent::ClassLoad,
            sys::JVMTI_EVENT_CLASS_PREPARE => JvmtiEvent::ClassPrepare,
            sys::JVMTI_EVENT_VM_START => JvmtiEvent::VmStart,
            sys::JVMTI_EVENT_EXCEPTION => JvmtiEvent::Exception,
            sys::JVMTI_EVENT_EXCEPTION_CATCH => JvmtiEvent::ExceptionCatch,
            sys::JVMTI_EVENT_SINGLE_STEP => JvmtiEvent::SingleStep,
            sys::JVMTI_EVENT_FRAME_POP => JvmtiEvent::FramePop,
            sys::JVMTI_EVENT_BREAKPOINT => JvmtiEvent::Breakpoint,
            sys::JVMTI_EVENT_FIELD_ACCESS => JvmtiEvent::FieldAccess,
            sys::JVMTI_EVENT_FIELD_MODIFICATION => JvmtiEvent::FieldModification,
            sys::JVMTI_EVENT_METHOD_ENTRY => JvmtiEvent::MethodEntry,
            sys::JVMTI_EVENT_METHOD_EXIT => JvmtiEvent::MethodExit,
            sys::JVMTI_EVENT_NATIVE_METHOD_BIND => JvmtiEvent::NativeMethodBind,
            sys::JVMTI_EVENT_COMPILED_METHOD_LOAD => JvmtiEvent::CompiledMethodLoad,
            sys::JVMTI_EVENT_COMPILED_METHOD_UNLOAD => JvmtiEvent::CompiledMethodUnload,
            sys::JVMTI_EVENT_DYNAMIC_CODE_GENERATED => JvmtiEvent::DynamicCodeGenerated,
            sys::JVMTI_EVENT_DATA_DUMP_REQUEST => JvmtiEvent::DataDumpRequest,
            sys::JVMTI_EVENT_MONITOR_WAIT => JvmtiEvent::MonitorWait,
            sys::JVMTI_EVENT_MONITOR_WAITED => JvmtiEvent::MonitorWaited,
            sys::JVMTI_EVENT_MONITOR_CONTENDED_ENTER => JvmtiEvent::MonitorContendedEnter,
            sys::JVMTI_EVENT_MONITOR_CONTENDED_ENTERED => JvmtiEvent::MonitorContendedEntered,
            sys::JVMTI_EVENT_RESOURCE_EXHAUSTED => JvmtiEvent::ResourceExhausted,
            sys::JVMTI_EVENT_GARBAGE_COLLECTION_START => JvmtiEvent::GarbageCollectionStart,
            sys::JVMTI_EVENT_GARBAGE_COLLECTION_FINISH => JvmtiEvent::GarbageCollectionFinish,
            sys::JVMTI_EVENT_OBJECT_FREE => JvmtiEvent::ObjectFree,
            sys::JVMTI_EVENT_VM_OBJECT_ALLOC => JvmtiEvent::VmObjectAlloc,
            _ => JvmtiEvent::Unsupported,
        }
    }
}